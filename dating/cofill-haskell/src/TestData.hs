module TestData where

import Numeric.LinearAlgebra ((><))
import CollaborativeFiltering

fastAiAnswers :: Matrix
fastAiAnswers = (15><15)
    [ 3  , 5  , 1  , 3  , 4, 4  , 5  , 2  , 5  , 5  , 4  , 5  , 5  , 2  , 5
    , 5  , 5  , 5  , 4  , 5, 4  , 4  , 5  , 4  , 4  , 5  , 5  , 3  , 4  , 5
    , 4  , 5  , 5  , 4  , 5, 3  , 4.5, 5  , 4.5, 5  , 5  , 5  , 4.5, 5  , 4
    , 5  , 4  , 4  , 3  , 5, 3  , 4  , 4.5, 4  , 0  , 3  , 3  , 5  , 3  , 0
    , 2.5, 0  , 2  , 5  , 0, 4  , 2.5, 0  , 5  , 5  , 3  , 3  , 4  , 3  , 2
    , 3  , 0  , 4  , 4  , 4, 3  , 0  , 3  , 4  , 4  , 4.5, 4  , 4.5, 4  , 0
    , 3  , 3  , 5  , 4.5, 5, 4.5, 2  , 4.5, 4  , 3  , 4.5, 4.5, 4  , 3  , 4
    , 5  , 5  , 5  , 4  , 0, 4  , 5  , 4  , 4  , 4  , 0  , 3  , 5  , 4  , 4
    , 4  , 5  , 4  , 5  , 4, 4  , 5  , 5  , 4  , 4  , 4  , 4  , 2  , 3.5, 5
    , 3  , 3.5, 3  , 2.5, 0, 0  , 3  , 3.5, 3.5, 3  , 3.5, 3  , 3  , 4  , 4
    , 5  , 5  , 4  , 3  , 5, 2  , 4  , 4  , 5  , 5  , 5  , 3  , 4.5, 3  , 4.5
    , 0  , 5  , 2  , 3  , 5, 0  , 5  , 5  , 0  , 2.5, 2  , 3.5, 3.5, 3.5, 5
    , 1  , 5  , 3  , 5  , 4, 5  , 5  , 0  , 2  , 5  , 5  , 3  , 3  , 4  , 5
    , 4.5, 4.5, 3.5, 3  , 4, 4.5, 4  , 4  , 4  , 4  , 3.5, 3  , 4.5, 4  , 4.5
    , 0  , 5  , 3  , 3  , 0, 3  , 5  , 0  , 5  , 5  , 5  , 5  , 2  , 5  , 4  ]

groupAnswers :: Matrix
groupAnswers = (6><10)
    [ 3, 4, 3, 1, 1, 5, 5, 2, 3, 3
    , 3, 2, 3, 1, 4, 5, 5, 3, 2, 1
    , 1, 1, 3, 1, 3, 1, 4, 3, 2, 2
    , 4, 1, 3, 1, 2, 4, 5, 3, 1, 2
    , 2, 4, 2, 1, 2, 5, 5, 2, 1, 1
    , 3, 4, 2, 1, 2, 5, 5, 4, 1, 1 ]

testAnswers :: Matrix
testAnswers = (6><10)
    [ 0, 4, 3, 1, 1, 5, 5, 0, 3, 3
    , 3, 2, 3, 0, 4, 5, 5, 3, 2, 1
    , 1, 1, 3, 1, 3, 1, 4, 3, 0, 2
    , 4, 1, 3, 1, 2, 0, 5, 0, 1, 2
    , 2, 4, 0, 1, 2, 5, 0, 2, 1, 1
    , 3, 4, 2, 1, 2, 5, 5, 4, 0, 1 ]



runner :: IO Double
runner = do
    let alpha = 0.0000001
    let threshold = 0.01
        
    guess <- uncurry mul <$> train (50, 1000) threshold alpha fastAiAnswers 5
    return $ meanSquareError (fastAiAnswers - guess) (15*15)
            